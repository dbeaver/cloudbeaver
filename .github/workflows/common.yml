name: Check

on:
  push:
    branches:
      - devel
  pull_request:
    branches:
      - devel

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      skip_cache:
        description: "Skip cache restoration"
        required: false
        default: "false"

jobs:
  call-backend-build:
    name: Build
    uses: ./.github/workflows/backend-build.yml

  call-frontend-build:
    name: Build
    uses: ./.github/workflows/frontend-build.yml
    with:
      skip_cache: ${{ github.event.inputs.skip_cache }}

  call-frontend-lint:
    name: Lint
    needs: call-frontend-build
    uses: ./.github/workflows/frontend-lint.yml

  call-frontend-tests:
    name: Frontend Unit Tests
    needs: call-frontend-build
    runs-on: ubuntu-latest
    steps:
      - name: Check if tests passed
        if: ${{ needs.call-frontend-build.outputs.test-status != 'success' }}
        run: |
          echo "Tests failed"
          exit 1
      - name: Continue if tests passed
        if: ${{ needs.call-frontend-build.outputs.test-status == 'success' }}
        run: echo "Tests passed"

  check-lint-status:
    name: Frontend Lint Status
    needs: call-frontend-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check if lint passed
        if: ${{ needs.call-frontend-lint.outputs.lint-status != 'success' }}
        run: |
          echo "Linting failed"
          exit 1
      - name: Continue if lint passed
        if: ${{ needs.call-frontend-lint.outputs.lint-status == 'success' }}
        run: echo "Linting passed"

  call-docker-build-and-push:
    name: Run
    needs: [call-backend-build, call-frontend-build]
    uses: ./.github/workflows/docker-build-and-push.yml
