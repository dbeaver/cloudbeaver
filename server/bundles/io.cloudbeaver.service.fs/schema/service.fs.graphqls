type FSFile @since(version: "23.2.2") {
    name: String!
    length: Int!
    folder: Boolean!
    metaData: Object!
    nodePath: String!
}

type FSFileSystem @since(version: "23.2.4") {
    id: ID!
    nodePath: String!
    requiredAuth: String
}

extend type Query @since(version: "23.2.2") {
    fsListFileSystems(projectId: ID!): [FSFileSystem!]!

    fsFileSystem(projectId: ID!, nodePath: String!): FSFileSystem! @since(version: "23.2.4")

    fsFile(nodePath: String!):  FSFile!

    fsListFiles(folderPath: String!): [FSFile!]!

    # Reads file contents as string in UTF-8
    fsReadFileContentAsString(nodePath: String!): String!
}

extend type Mutation @since(version: "23.2.2") {
    fsCreateFile(parentPath : String!, fileName : String!): FSFile!

    fsCreateFolder(parentPath : String!, folderName: String!): FSFile!

    fsDelete(nodePath : String!): Boolean!

    fsMove(nodePath: String!, toParentNodePath: String!): FSFile!

    fsRename(nodePath: String!, newName: String!): FSFile!

    fsCopy(projectId: ID!, fromURI: String!, toURI: String!): FSFile! @since(version: "23.2.5")

    fsWriteFileStringContent(
        nodePath:String!,
        data: String!,
        forceOverwrite: Boolean!
    ): FSFile!
}